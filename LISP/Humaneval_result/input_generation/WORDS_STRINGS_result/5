Based on the provided API method and input specification, we can write test cases using JUnit. We need to create instances of the input parameter `s` which contains a mix of characters, including commas and spaces. We also need to import the required classes for testing.

Here is an example of how we can write test cases for the `words_strings` method:

```java
import static org.junit.Assert.assertEquals;
import java.util.ArrayList;
import org.junit.Test;

public class Test_WORDS_STRINGS {

    @Test
    public void testWordsStrings_1() {
        String input = "hello,world";
        ArrayList<String> expected = new ArrayList<>();
        expected.add("hello");
        expected.add("world");
        
        ArrayList<String> result = WORDS_STRINGS.words_strings(input);
        
        assertEquals(expected, result);
    }

    @Test
    public void testWordsStrings_2() {
        String input = "apple,orange,banana";
        ArrayList<String> expected = new ArrayList<>();
        expected.add("apple");
        expected.add("orange");
        expected.add("banana");
        
        ArrayList<String> result = WORDS_STRINGS.words_strings(input);
        
        assertEquals(expected, result);
    }
}
```

In the above test cases, we are testing the `words_strings` method with different inputs containing commas and spaces. We expect the method to split the input string based on commas and return an ArrayList of strings.