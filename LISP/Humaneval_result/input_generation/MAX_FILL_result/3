Based on the provided API method and input specification, we can write test cases in JUnit format. We need to create instances of `grid` and `bucket_capacity` as input parameters for the `max_fill` method.

Here is the JUnit test code with the required import statements:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Test_MAX_FILL {
    
    @Test
    public void testMaxFill_1() {
        int[][] grid = {{3, 2, 1}, {4, 5, 6}};
        int bucket_capacity = 3;
        int result = MAX_FILL.max_fill(grid, bucket_capacity);
        assertEquals(5, result);
    }
    
    @Test
    public void testMaxFill_2() {
        int[][] grid = {{1, 1, 1}, {2, 2, 2}, {3, 3, 3}};
        int bucket_capacity = 2;
        int result = MAX_FILL.max_fill(grid, bucket_capacity);
        assertEquals(6, result);
    }
}
```

In the above code:
- We import the necessary JUnit classes for testing.
- We create two test cases with different `grid` values and `bucket_capacity`.
- We call the `max_fill` method with the test inputs and assert that the result matches the expected output.