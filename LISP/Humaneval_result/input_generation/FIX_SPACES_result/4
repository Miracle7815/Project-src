Based on the provided API method and input specification, we can write test cases using JUnit. We need to create instances of `text` containing multiple characters with consecutive spaces.

Here is an example of how we can write test cases for the `fix_spaces` method:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Test_FIX_SPACES {

    @Test
    public void testFixSpaces_WithConsecutiveSpaces() {
        String text = "Hello   World";
        String result = FIX_SPACES.fix_spaces(text);
        assertEquals("Hello___World", result);
    }

    @Test
    public void testFixSpaces_WithoutConsecutiveSpaces() {
        String text = "Java is fun";
        String result = FIX_SPACES.fix_spaces(text);
        assertEquals("Java_is_fun", result);
    }

    @Test
    public void testFixSpaces_WithLongConsecutiveSpaces() {
        String text = "This    is    a    test";
        String result = FIX_SPACES.fix_spaces(text);
        assertEquals("This----is----a----test", result);
    }
}
```

In the above test cases, we are testing the `fix_spaces` method with different scenarios of input text containing consecutive spaces.