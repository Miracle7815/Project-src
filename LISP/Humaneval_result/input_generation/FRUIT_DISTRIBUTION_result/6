Based on the provided API method and input specification, we can write test cases in JUnit format as follows:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class TestFRUIT_DISTRIBUTION {

    @Test
    public void testFruitDistribution_1() {
        String s = "10 -5 3 -2";
        int n = 20;
        int result = FRUIT_DISTRIBUTION.fruit_distribution(s, n);
        assertEquals(14, result);
    }

    @Test
    public void testFruitDistribution_2() {
        String s = "-1 -2 -3";
        int n = 10;
        int result = FRUIT_DISTRIBUTION.fruit_distribution(s, n);
        assertEquals(16, result);
    }

    @Test
    public void testFruitDistribution_3() {
        String s = "5 2 3";
        int n = 10;
        int result = FRUIT_DISTRIBUTION.fruit_distribution(s, n);
        assertEquals(0, result);
    }
}
```

These test cases cover scenarios where the input string `s` contains negative integer values and `n` can be any integer, as specified in the input specification.