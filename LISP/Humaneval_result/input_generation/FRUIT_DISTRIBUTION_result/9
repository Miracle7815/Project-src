Based on the provided API method and input specification, we can write test cases using JUnit. Here is an example of how to write test cases for the `fruit_distribution` method:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class TestFRUIT_DISTRIBUTION {

    @Test
    public void testFruitDistribution_1() {
        String s = "10 5 3 2";
        int n = 20;
        int result = FRUIT_DISTRIBUTION.fruit_distribution(s, n);
        assertEquals(0, result);
    }

    @Test
    public void testFruitDistribution_2() {
        String s = "8 4 6";
        int n = 15;
        int result = FRUIT_DISTRIBUTION.fruit_distribution(s, n);
        assertEquals(-3, result);
    }

    @Test
    public void testFruitDistribution_3() {
        String s = "2 3 4";
        int n = 10;
        int result = FRUIT_DISTRIBUTION.fruit_distribution(s, n);
        assertEquals(1, result);
    }
}
```

In the above test cases, we are testing the `fruit_distribution` method with different inputs to ensure that it correctly calculates the result based on the input string `s` and integer `n`.