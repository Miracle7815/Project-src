Based on the provided API method and input specification, we can write test cases in JUnit format as follows:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class FRUIT_DISTRIBUTIONTest {

    @Test
    public void testFruitDistribution_NullString() {
        int result = FRUIT_DISTRIBUTION.fruit_distribution(null, 10);
        assertEquals(10, result);
    }

    @Test
    public void testFruitDistribution_PositiveInteger() {
        int result = FRUIT_DISTRIBUTION.fruit_distribution("5 3 2", 10);
        assertEquals(0, result);
    }

    @Test
    public void testFruitDistribution_NegativeInteger() {
        int result = FRUIT_DISTRIBUTION.fruit_distribution("5 -3 2", 10);
        assertEquals(16, result);
    }
}
```

In the above test cases, we are testing the `FRUIT_DISTRIBUTION` method with different scenarios including a null string, positive integers, and negative integers.