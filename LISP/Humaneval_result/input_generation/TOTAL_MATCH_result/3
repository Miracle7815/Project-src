Based on the provided API method and input specification, we can write test cases in JUnit format as follows:

```java
import java.util.Arrays;
import java.util.List;

public class TOTAL_MATCHTest {

    @Test
    public void testTotalMatch_lst1LessThan_lst2() {
        List<String> lst1 = Arrays.asList("abc", "def");
        List<String> lst2 = Arrays.asList("ghi", "jkl", "mno");
        List<String> result = TOTAL_MATCH.total_match(lst1, lst2);
        assertEquals(lst1, result);
    }

    @Test
    public void testTotalMatch_lst1EqualTo_lst2() {
        List<String> lst1 = Arrays.asList("abc", "def");
        List<String> lst2 = Arrays.asList("ghi", "jkl");
        List<String> result = TOTAL_MATCH.total_match(lst1, lst2);
        assertEquals(lst1, result);
    }

    @Test
    public void testTotalMatch_lst1GreaterThan_lst2() {
        List<String> lst1 = Arrays.asList("abc", "def", "ghi");
        List<String> lst2 = Arrays.asList("jkl", "mno");
        List<String> result = TOTAL_MATCH.total_match(lst1, lst2);
        assertEquals(lst2, result);
    }
}
```

In the above test cases, we are testing the `total_match` method with different scenarios where `lst1` is less than, equal to, and greater than `lst2` in terms of total length.