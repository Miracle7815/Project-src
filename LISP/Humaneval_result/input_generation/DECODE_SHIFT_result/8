Based on the provided API method and input specification, we can write test cases using JUnit. We need to create instances of an empty string to test the `encode_shift` and `decode_shift` methods.

Here is the JUnit test code with the required import statements:

```java
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DECODE_SHIFTTest {

    @Test
    public void testEncodeShiftWithEmptyString() {
        String emptyString = "";
        String encodedString = DECODE_SHIFT.encode_shift(emptyString);
        assertEquals("", encodedString);
    }

    @Test
    public void testDecodeShiftWithEmptyString() {
        String emptyString = "";
        String decodedString = DECODE_SHIFT.decode_shift(emptyString);
        assertEquals("", decodedString);
    }
}
```

In the above test code, we are testing the `encode_shift` and `decode_shift` methods with an empty string as input. The expected output for both cases is also an empty string.